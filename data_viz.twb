<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='observations_train' inline='true' name='federated.1yyxaet1a65p7b10w3nw707ypv2i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='observations_train' name='textscan.06vta1d0hoeg1c1h8flc30ge9yps'>
            <connection class='textscan' directory='C:/Users/ziw029/github/Datahacks2021-Advanced/datasets' filename='observations_train.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06vta1d0hoeg1c1h8flc30ge9yps' name='observations_train.csv' table='[observations_train#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='series_id' ordinal='0' />
            <column datatype='datetime' name='date' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.06vta1d0hoeg1c1h8flc30ge9yps' name='observations_train.csv' table='[observations_train#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='series_id' ordinal='0' />
            <column datatype='datetime' name='date' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[observations_train.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>series_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[series_id]</local-name>
            <parent-name>[observations_train.csv]</parent-name>
            <remote-alias>series_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[observations_train.csv_6EB34C6D44564413A3603DA4549F7C14]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[observations_train.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[observations_train.csv_6EB34C6D44564413A3603DA4549F7C14]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[observations_train.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[observations_train.csv_6EB34C6D44564413A3603DA4549F7C14]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='observations_train.csv' datatype='table' name='[__tableau_internal_object_id__].[observations_train.csv_6EB34C6D44564413A3603DA4549F7C14]' role='measure' type='quantitative' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Series Id' datatype='string' name='[series_id]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;美国&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='observations_train.csv' id='observations_train.csv_6EB34C6D44564413A3603DA4549F7C14'>
            <properties context=''>
              <relation connection='textscan.06vta1d0hoeg1c1h8flc30ge9yps' name='observations_train.csv' table='[observations_train#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='series_id' ordinal='0' />
                  <column datatype='datetime' name='date' ordinal='1' />
                  <column datatype='real' name='value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='train_std' inline='true' name='federated.15plm131h3aetl12vhiqg1jumidu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='train_std' name='textscan.07lft6e1szlhgv19x8hf51n1jvzc'>
            <connection class='textscan' directory='C:/Users/ziw029/github/Datahacks2021-Advanced/datasets' filename='train_std.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.07lft6e1szlhgv19x8hf51n1jvzc' name='viz_eda.csv' table='[viz_eda#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='series_id' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.07lft6e1szlhgv19x8hf51n1jvzc' name='viz_eda.csv' table='[viz_eda#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='series_id' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[viz_eda.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[viz_eda.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[viz_eda.csv_1FB4AD45A34F4ACFBEC5AB681152CB64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>series_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[series_id]</local-name>
            <parent-name>[viz_eda.csv]</parent-name>
            <remote-alias>series_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[viz_eda.csv_1FB4AD45A34F4ACFBEC5AB681152CB64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[viz_eda.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[viz_eda.csv_1FB4AD45A34F4ACFBEC5AB681152CB64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='increased_size' datatype='string' name='[Calculation_1123929612692127744]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [series_id] = &quot;SP500&quot; THEN &quot;SP500&quot; ELSE &quot;Other&quot; END' />
      </column>
      <column caption='highlight' datatype='boolean' name='[Calculation_2205074997956841472]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[series_id]=&apos;SP500&apos;' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='viz_eda.csv' datatype='table' name='[__tableau_internal_object_id__].[viz_eda.csv_1FB4AD45A34F4ACFBEC5AB681152CB64]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Series Id' datatype='string' name='[series_id]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_2205074997956841472]' derivation='None' name='[none:Calculation_2205074997956841472:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[series_id]' derivation='None' name='[none:series_id:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_2205074997956841472:nk]' type='palette'>
            <map to='#bab0ac'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:series_id:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT50002S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT50030S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT51000S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT51100S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT51110S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT51120S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT51200S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT52000S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT52100S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT521A3S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT52300S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT54000S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT54100S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT54200S&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GVIPT54220S&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AAA10Y&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ASEANTOT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BAA10Y&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BUSAPPWNSAUS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BUSAPPWNSAUSYY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CBUSAPPWNSAUS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CBUSAPPWNSAUSYY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CUUR0000SA0R&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DLTIIT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DPCREDIT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DPRIME&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EECTOT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EFFR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EFFRVOL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FRGSHPUSM649NCIS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SFTPAGRM158SFRBSF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SOFR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SOFRVOL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T10YIE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TEDRATE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TLAACBW027NBOG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TLBACBW027NBOG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TSIFRGHT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UNRATE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WLEMUINDXD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DFII10&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DFII20&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DFII30&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DFII5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DFII7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DEXCHUS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DEXUSEU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DEXUSUK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SP500&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;INFECTDISEMVTRACKD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IOER&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IORR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MEDCPIM158SFRBCLE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MORTGAGE15US&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MORTGAGE30US&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OBFR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OBFRVOL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUADLVWRADLVWR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUAINFOAINFO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUAMUMAMUM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUARETTRARETTR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUASHCASHC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUASTDSVASTDSV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUATRADEATRADE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUATRANSATRANS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUATRNWRATRNWR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUATTDSVATTDSV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUAWHLTRAWHLTR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUOMFGOMFG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PCUOMINOMIN&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;美国&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='viz_eda.csv' id='viz_eda.csv_1FB4AD45A34F4ACFBEC5AB681152CB64'>
            <properties context=''>
              <relation connection='textscan.07lft6e1szlhgv19x8hf51n1jvzc' name='viz_eda.csv' table='[viz_eda#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='series_id' ordinal='1' />
                  <column datatype='real' name='value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_5A8EED369244452189D734287AD3E951]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 2' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Series Id' />
        <param name='target' value='Sheet 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='SP500'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Series Changing Trend over the Past Years (Normalized for each Series&apos; value)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='train_std' name='federated.15plm131h3aetl12vhiqg1jumidu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15plm131h3aetl12vhiqg1jumidu'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[value]' derivation='Median' name='[med:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[series_id]' derivation='None' name='[none:series_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
            <column caption='Series Id' datatype='string' name='[series_id]' role='dimension' type='nominal' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.15plm131h3aetl12vhiqg1jumidu].[none:series_id:nk]' value='184' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.15plm131h3aetl12vhiqg1jumidu].[med:value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.15plm131h3aetl12vhiqg1jumidu].[med:value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.15plm131h3aetl12vhiqg1jumidu].[med:value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.15plm131h3aetl12vhiqg1jumidu].[med:value:qk]' />
              <text column='[federated.15plm131h3aetl12vhiqg1jumidu].[med:value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows include-empty='true'>[federated.15plm131h3aetl12vhiqg1jumidu].[none:series_id:nk]</rows>
        <cols>([federated.15plm131h3aetl12vhiqg1jumidu].[yr:date:ok] / [federated.15plm131h3aetl12vhiqg1jumidu].[qr:date:ok])</cols>
      </table>
      <simple-id uuid='{CAD4267D-769C-416F-A7E2-334021A73D4D}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Normalized Trend for Each Series across Time in Training &amp; Test Set</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='train_std' name='federated.15plm131h3aetl12vhiqg1jumidu' />
          </datasources>
          <datasource-dependencies datasource='federated.15plm131h3aetl12vhiqg1jumidu'>
            <column caption='highlight' datatype='boolean' name='[Calculation_2205074997956841472]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[series_id]=&apos;SP500&apos;' />
            </column>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2205074997956841472]' derivation='None' name='[none:Calculation_2205074997956841472:nk]' pivot='key' type='nominal' />
            <column-instance column='[series_id]' derivation='None' name='[none:series_id:nk]' pivot='key' type='nominal' />
            <column caption='Series Id' datatype='string' name='[series_id]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.15plm131h3aetl12vhiqg1jumidu].[none:series_id:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SP500&quot;</bucket>
              <bucket>&quot;PCUADLVWRADLVWR&quot;</bucket>
              <bucket>&quot;PCUAINFOAINFO&quot;</bucket>
              <bucket>&quot;PCUAMUMAMUM&quot;</bucket>
              <bucket>&quot;PCUARETTRARETTR&quot;</bucket>
              <bucket>&quot;PCUASHCASHC&quot;</bucket>
              <bucket>&quot;PCUASTDSVASTDSV&quot;</bucket>
              <bucket>&quot;PCUATRADEATRADE&quot;</bucket>
              <bucket>&quot;PCUATRANSATRANS&quot;</bucket>
              <bucket>&quot;PCUATRNWRATRNWR&quot;</bucket>
              <bucket>&quot;PCUATTDSVATTDSV&quot;</bucket>
              <bucket>&quot;PCUAWHLTRAWHLTR&quot;</bucket>
              <bucket>&quot;DEXCHUS&quot;</bucket>
              <bucket>&quot;DEXUSEU&quot;</bucket>
              <bucket>&quot;DEXUSUK&quot;</bucket>
              <bucket>&quot;DFII5&quot;</bucket>
              <bucket>&quot;DFII7&quot;</bucket>
              <bucket>&quot;DFII10&quot;</bucket>
              <bucket>&quot;DFII20&quot;</bucket>
              <bucket>&quot;DFII30&quot;</bucket>
              <bucket>&quot;DLTIIT&quot;</bucket>
              <bucket>&quot;DPCREDIT&quot;</bucket>
              <bucket>&quot;DPRIME&quot;</bucket>
              <bucket>&quot;EECTOT&quot;</bucket>
              <bucket>&quot;EFFR&quot;</bucket>
              <bucket>&quot;EFFRVOL&quot;</bucket>
              <bucket>&quot;FRGSHPUSM649NCIS&quot;</bucket>
              <bucket>&quot;GVIPT521A3S&quot;</bucket>
              <bucket>&quot;GVIPT50002S&quot;</bucket>
              <bucket>&quot;GVIPT50030S&quot;</bucket>
              <bucket>&quot;GVIPT51000S&quot;</bucket>
              <bucket>&quot;GVIPT51100S&quot;</bucket>
              <bucket>&quot;GVIPT51110S&quot;</bucket>
              <bucket>&quot;GVIPT51120S&quot;</bucket>
              <bucket>&quot;GVIPT51200S&quot;</bucket>
              <bucket>&quot;GVIPT52000S&quot;</bucket>
              <bucket>&quot;GVIPT52100S&quot;</bucket>
              <bucket>&quot;GVIPT52300S&quot;</bucket>
              <bucket>&quot;GVIPT54000S&quot;</bucket>
              <bucket>&quot;GVIPT54100S&quot;</bucket>
              <bucket>&quot;GVIPT54200S&quot;</bucket>
              <bucket>&quot;GVIPT54220S&quot;</bucket>
              <bucket>&quot;INFECTDISEMVTRACKD&quot;</bucket>
              <bucket>&quot;IOER&quot;</bucket>
              <bucket>&quot;IORR&quot;</bucket>
              <bucket>&quot;MEDCPIM158SFRBCLE&quot;</bucket>
              <bucket>&quot;MORTGAGE15US&quot;</bucket>
              <bucket>&quot;MORTGAGE30US&quot;</bucket>
              <bucket>&quot;OBFR&quot;</bucket>
              <bucket>&quot;OBFRVOL&quot;</bucket>
              <bucket>&quot;PCUOMFGOMFG&quot;</bucket>
              <bucket>&quot;PCUOMINOMIN&quot;</bucket>
              <bucket>&quot;SFTPAGRM158SFRBSF&quot;</bucket>
              <bucket>&quot;SOFR&quot;</bucket>
              <bucket>&quot;SOFRVOL&quot;</bucket>
              <bucket>&quot;T10YIE&quot;</bucket>
              <bucket>&quot;TEDRATE&quot;</bucket>
              <bucket>&quot;TLAACBW027NBOG&quot;</bucket>
              <bucket>&quot;TLBACBW027NBOG&quot;</bucket>
              <bucket>&quot;TSIFRGHT&quot;</bucket>
              <bucket>&quot;UNRATE&quot;</bucket>
              <bucket>&quot;WLEMUINDXD&quot;</bucket>
              <bucket>&quot;AAA10Y&quot;</bucket>
              <bucket>&quot;ASEANTOT&quot;</bucket>
              <bucket>&quot;BAA10Y&quot;</bucket>
              <bucket>&quot;BUSAPPWNSAUS&quot;</bucket>
              <bucket>&quot;BUSAPPWNSAUSYY&quot;</bucket>
              <bucket>&quot;CBUSAPPWNSAUS&quot;</bucket>
              <bucket>&quot;CBUSAPPWNSAUSYY&quot;</bucket>
              <bucket>&quot;CUUR0000SA0R&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.15plm131h3aetl12vhiqg1jumidu].[none:Calculation_2205074997956841472:nk]' field-type='nominal' max-size='1' min-size='0.00767257' type='catsize' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-color' value='#b6992d' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.15plm131h3aetl12vhiqg1jumidu].[none:Calculation_2205074997956841472:nk]' value='SP500 Index' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.15plm131h3aetl12vhiqg1jumidu].[none:series_id:nk]' />
              <size column='[federated.15plm131h3aetl12vhiqg1jumidu].[none:Calculation_2205074997956841472:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.26066890358924866' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15plm131h3aetl12vhiqg1jumidu].[avg:value:qk]</rows>
        <cols>[federated.15plm131h3aetl12vhiqg1jumidu].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{16F91AD1-A991-4DD4-953C-1E38826F5DDF}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='SP500'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15plm131h3aetl12vhiqg1jumidu].[med:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.15plm131h3aetl12vhiqg1jumidu].[med:value:qk]</field>
            <field>[federated.15plm131h3aetl12vhiqg1jumidu].[mn:date:ok]</field>
            <field>[federated.15plm131h3aetl12vhiqg1jumidu].[none:series_id:nk]</field>
            <field>[federated.15plm131h3aetl12vhiqg1jumidu].[qr:date:ok]</field>
            <field>[federated.15plm131h3aetl12vhiqg1jumidu].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C892835E-1419-41D9-AD70-02D83A7A4EA9}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='1' param='[federated.15plm131h3aetl12vhiqg1jumidu].[none:Calculation_2205074997956841472:nk]' type='size' />
            <card pane-specification-id='1' param='[federated.15plm131h3aetl12vhiqg1jumidu].[none:series_id:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15plm131h3aetl12vhiqg1jumidu].[:Measure Names]</field>
            <field>[federated.15plm131h3aetl12vhiqg1jumidu].[none:Calculation_2205074997956841472:nk]</field>
            <field>[federated.15plm131h3aetl12vhiqg1jumidu].[tmn:date:ok]</field>
            <field>[federated.15plm131h3aetl12vhiqg1jumidu].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A1FB047-6233-49FD-8DF2-ED755A9AE8F6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='SP500' width='192'>
      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
      //bv/g3HDr+Lr2UZ3zLMmz//Hc3d7Qw269zXOhhvqXH4TJndG/JcnVbs6LU5frvMrm0TnDry
      CSJTpL0gqGOyYbCLX394moP7d3H09x9i55vYPt7LJ1cekLdt2rIBnpZjuCPLe6fv8vSBx+nv
      akSMaeBPw2oNMequg2VZLC7Mo9DoHRqhpbWNkf4uam4dt1Lm2vmTjA10cGLyNnemfVpzGhXH
      wXED3OoS1ZrH4uIs9+cWkU6VsYkJKgsLYNpkqDMzX2Z+YZ75+Tmk9HE8ha0FLFZq6Jqg6rgo
      t8ZSpcxS1aFSqxH4Hr4S6NJlqeY1wqY28KVg5SgKAia27+L8sU/xzRx79+8lm7I/LJZa+fHr
      r3P95l2aWlq5dvo0yp8ncCtcn1ogaxu4XoCUiuaMTkUZaMDs9DQL83No2RLD/Z3cuX4ZPduG
      iU9b7wjNapZT1x4wMr6Vod5OcvkclZqDJhWdPQP4ToW+wTHMyj0u3Vlg49Yd9Ha0fMVd1cB3
      ESuXQJpNW0uRl157FUuH5a2XF198AaGb/OiVV8jYFs+++Cr5XI6lSgXb1JieWWC8q4M9IxvR
      hI8vBbZl4EmQ23zcapmXX3yK5pY20AxefHEHS/MPwMxhiYBsdh/dHS3U6hI0ix/9+FUsXeDU
      fYoLC5R2TaBLFyt/kPaWIp5svP0b+HLwnTKIOTd5j6uzodGJYWiY0R6/oWs0FRIrsjHtTnzs
      3L5McSkUwqQnkV4kXJoCPZP4pTSa8nGaRZWnSY/8WYrPn4y+0plsOoBuhq+UeU9HRjuxXiBD
      JggwdQ0rYqiUW2M8MxsTSQtaIu9YIkipJRAfV506drStKpBYshqnuVjviFUbAplyS+LVkGbI
      HOV0SZudCMhBikMpCC/+d3vRp6yFKhd92gP69dBoxdey1IyQhZNKcNlNNIkH/Una7FDA1oMq
      moyEbbeCrJbDYy+gvhD1KwK/o5uCFrbBad2CjJi8O16RWT9RZ4l39f06vorsGoDufMICuSrs
      cwG0GMne05oJMDt1FweLnvYS1ydv0D0wRGXuPrMLNTo7W7k/NcvA0BBZ65tHIDX8An0z2//H
      pFFKUS6Xv1CaWq2GrutJzOlHwKrerfLW24eRgcf777yFMk3efPNtDr3/Ie3tbZw9fBjPgl+/
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      EypuEIPoctg44oXKOTK5LPnyOne33mSuuvGpMdZu3UZOLaFqOez6u3jRkOX1f01jePj4BSBJ
      Eru9LgVlRDazwlF/n1SyiBGPkI0qkzDGH95ENYoMbYvlynkOu9fIpDZYLc6y07qG57bokQNJ
      43R5lpQmU9I9xqGOEvawSbFQnOdOY5tiKk/aMBCRxSgI2Ozt0xy3UWSZQmqGe+1NNMVjTIpW
      /w41x6Hdu8pppcX7R+8Rq0lqQ5vOpI0i20RCYi67xE63yemcheX2qaYzJGLY7dc4at0hnV9h
      s3NIbVSjnJoDYur9fW5bXVpeDEHEfCFHz25TSM5iuVuI0SbZ2VfY2n2N75x+AXlwg6NJk3Gg
      E6CiazLPpzvcHTX4s5XztAa/pTD3Y+RkniixyLfWvkfK09BNwdnK0wTC4PXd9/DDHoqsojg6
      FzJplkoz1P0ceV3nsL1NX6pQHzt0d/4aK5Zoj0eEcpYfrZzl2Zmn8EMJR8isJU8TGga5lMk4
      jJh4MoPAp9W7RF41OZ328d0aPekUOXOOKFSJlEUO3T5RaNNxRmj2HmL2X1MWXUQiS8Py6NQu
      EyXmmEQym50JlqdiqGAoEq3xgJ59QM8+wnYnzJlL9DUohBKTic2No1sszJ5DU6T7LqSEG3i0
      WrcplE7Raw2IDYmBvkxMhkJgPn4BAAxdm6zi4MkZ3t57D0nyGQcu2dQMuqLQ7G3xTj/DyDog
      l1ngVMag7bukjTwFqc9E5EkmqtSGuwhc5nOztNtXUM0VXLfH0POYLSwxmAxJqDIpVXC3u4sX
      RZwqrTKbX6dpNXhr930SWpJvr7yAEwaMSaCqWX5bv8d6JkvfGxMHI761+BQ9P0vo7/PC8vPs
      9hooskMxvEqYfpqh79C1azQbb5DMLLHda6HrebLhHjuWYLN9i2oqx6lyltXyKu8eXgHPQlUS
      qKrKheqL7Le2KFeep5Q5g2rtU9abyKFFQm7hxof4osXzmYB7wyZl3WNrOCCde5Hu4DrfPvVT
      ru2+wVL6PMW0QiOuMrbuMpuc44fnf8rAaoGvsN3bRtazhHKOOOxx7eA9PLdFwdCpSSnGcoGX
      qn/OuUoewzlAqFn82KDduYoXV1ian+f9g7fIJ0sokspO403OJPvUvZjZ4jqJ7AuYSoaJO6Rr
      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
    </thumbnail>
  </thumbnails>
</workbook>
